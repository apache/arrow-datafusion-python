Search.setIndex({"docnames": ["api", "api/dataframe", "api/execution_context", "api/expression", "api/functions", "api/object_store", "generated/datafusion.DataFrame", "generated/datafusion.Expr", "generated/datafusion.RuntimeConfig", "generated/datafusion.SessionConfig", "generated/datafusion.SessionContext", "generated/datafusion.functions.functions", "generated/datafusion.object_store.object_store", "index"], "filenames": ["api.rst", "api/dataframe.rst", "api/execution_context.rst", "api/expression.rst", "api/functions.rst", "api/object_store.rst", "generated/datafusion.DataFrame.rst", "generated/datafusion.Expr.rst", "generated/datafusion.RuntimeConfig.rst", "generated/datafusion.SessionConfig.rst", "generated/datafusion.SessionContext.rst", "generated/datafusion.functions.functions.rst", "generated/datafusion.object_store.object_store.rst", "index.rst"], "titles": ["API Reference", "DataFrame", "SessionContext", "Expr", "Functions", "ObjectStore", "datafusion.DataFrame", "datafusion.Expr", "datafusion.RuntimeConfig", "datafusion.SessionConfig", "datafusion.SessionContext", "datafusion.functions.functions", "datafusion.object_store.object_store", "DataFusion in Python"], "terms": {"datafram": [0, 7, 10, 13], "datafus": 0, "sessioncontext": [0, 8, 9, 13], "sessionconfig": 0, "runtimeconfig": 0, "expr": [0, 6, 11, 13], "function": [0, 7, 13], "objectstor": [0, 13], "object_stor": 0, "class": [6, 7, 8, 9, 10, 12, 13], "base": [6, 7, 8, 9, 10, 12], "object": [6, 7, 8, 9, 10, 12], "A": [6, 7], "pydatafram": [6, 10], "i": [6, 10, 11, 13], "represent": [6, 7, 11], "logic": [6, 7, 10], "plan": [6, 7, 10, 13], "an": [6, 7, 10, 11], "api": 6, "compos": 6, "statement": [6, 10, 13], "us": [6, 7, 11], "build": [6, 13], "collect": [6, 13], "execut": [6, 10, 13], "result": [6, 11, 13], "The": [6, 11, 13], "actual": 6, "run": [6, 13], "nativ": 6, "rust": [6, 13], "arrow": [6, 7, 10, 13], "multi": [6, 10, 13], "thread": [6, 10, 13], "environ": [6, 13], "__init__": [6, 7, 8, 9, 10, 13], "method": [6, 7, 8, 9, 10, 11], "aggreg": [6, 11, 13], "group_bi": 6, "agg": 6, "cach": 6, "return": [6, 7, 10, 11, 13], "list": [6, 10], "recordbatch": [6, 13], "e": 6, "unless": 6, "some": 6, "order": [6, 11], "specifi": [6, 7, 11], "guarante": 6, "collect_partit": 6, "thi": [6, 7, 11, 13], "all": [6, 11], "vector": 6, "maintain": 6, "input": 6, "partit": [6, 10], "count": [6, 11], "describ": 6, "calcul": 6, "summari": 6, "statist": 6, "distinct": [6, 11], "filter": 6, "out": 6, "duplic": 6, "row": [6, 7], "except_al": 6, "py_df": 6, "except": 6, "two": 6, "": [6, 7, 11], "must": [6, 11], "have": [6, 13], "exactli": 6, "same": [6, 11], "schema": [6, 7, 9, 10], "execution_plan": 6, "get": 6, "explain": 6, "verbos": 6, "ellipsi": [6, 7, 10, 11], "analyz": 6, "print": 6, "queri": [6, 10, 13], "predic": 6, "intersect": 6, "join": 6, "right": [6, 11], "join_kei": 6, "how": 6, "limit": 6, "logical_plan": 6, "optimized_logical_plan": 6, "optim": [6, 10], "repartit": 6, "num": 6, "scheme": [6, 10], "repartition_by_hash": 6, "arg": [6, 11], "from": [6, 7, 10, 11], "select": [6, 13], "select_column": 6, "show": 6, "20": 6, "line": 6, "default": [6, 11], "sort": [6, 7, 11], "to_arrow_t": 6, "convert": [6, 11], "tabl": [6, 10, 13], "batch": [6, 10, 13], "pass": 6, "to_panda": 6, "panda": [6, 10], "pyarrow": [6, 13], "to_polar": 6, "polar": [6, 10], "to_pydict": 6, "python": [6, 7, 10], "dictionari": [6, 10], "each": [6, 11], "kei": [6, 9], "column": [6, 7, 11, 13], "valu": [6, 7, 9, 11, 13], "repres": [6, 7], "to_pylist": 6, "item": 6, "one": [6, 7, 11], "encod": [6, 11], "union": 6, "preserv": 6, "union_distinct": 6, "with_column": 6, "name": [6, 7, 10, 11, 13], "with_column_renam": 6, "old_nam": 6, "new_nam": 6, "renam": 6, "appli": 6, "new": [6, 11, 13], "project": 6, "op": 6, "doe": 6, "exist": [6, 7, 10], "write_csv": 6, "path": [6, 8, 10], "write": 6, "csv": [6, 13], "file": [6, 13], "write_json": 6, "json": 6, "write_parquet": 6, "parquet": [6, 13], "pyexpr": 7, "can": [7, 13], "alia": [7, 11], "assign": 7, "canonical_nam": 7, "full": 7, "complet": 7, "string": [7, 11], "express": [7, 11], "cast": 7, "static": 7, "column_nam": 7, "display_nam": 7, "should": [7, 11], "appear": 7, "includ": 7, "ani": 7, "is_nul": [7, 13], "liter": 7, "python_valu": 7, "extract": 7, "pyobject": 7, "share": 7, "rex_call_operand": 7, "rex": 7, "oper": [7, 13], "concept": 7, "operand": 7, "differ": 7, "variant": 7, "store": [7, 10, 13], "those": [7, 13], "datastructur": 7, "examin": 7, "call": 7, "vec": 7, "instanc": 7, "rex_call_oper": 7, "associ": 7, "rextyp": 7, "rex_typ": 7, "singl": 7, "data": [7, 10, 11, 13], "That": 7, "specif": 7, "could": 7, "user": [7, 13], "defin": [7, 13], "type": [7, 11], "identifi": 7, "possibl": 7, "valid": 7, "ascend": 7, "nulls_first": [7, 11], "creat": [7, 10, 11, 13], "to_vari": 7, "given": [7, 10, 11], "current": 7, "datatypemap": 7, "which": [7, 13], "pythontyp": 7, "datatyp": 7, "sqltype": 7, "enum": 7, "variant_nam": 7, "ex": 7, "isnotnul": 7, "binaryexpr": 7, "etc": 7, "runtim": 8, "option": [8, 9], "with_disk_manager_dis": 8, "with_disk_manager_o": 8, "with_disk_manager_specifi": 8, "with_fair_spill_pool": 8, "size": [8, 9], "with_greedy_memory_pool": 8, "with_temp_file_path": 8, "with_unbounded_memory_pool": 8, "configur": 9, "set": [9, 11], "with_batch_s": 9, "batch_siz": 9, "with_create_default_catalog_and_schema": 9, "enabl": 9, "with_default_catalog_and_schema": 9, "catalog": [9, 10], "with_information_schema": 9, "with_parquet_prun": 9, "with_repartition_aggreg": 9, "with_repartition_file_min_s": 9, "with_repartition_file_scan": 9, "with_repartition_join": 9, "with_repartition_sort": 9, "with_repartition_window": 9, "with_target_partit": 9, "target_partit": 9, "pysessioncontext": 10, "abl": 10, "It": [10, 13], "ha": 10, "power": [10, 11], "physic": 10, "planner": 10, "local": 10, "engin": [10, 13], "perform": 10, "create_datafram": [10, 13], "create_dataframe_from_logical_plan": 10, "deregister_t": 10, "empty_t": 10, "part": 10, "stream": 10, "record": 10, "from_arrow_t": 10, "construct": 10, "from_panda": 10, "from_polar": 10, "from_pydict": 10, "from_pylist": 10, "read_avro": 10, "table_partition_col": 10, "file_extens": 10, "read_csv": 10, "has_head": 10, "delimit": [10, 11], "schema_infer_max_record": 10, "read_json": 10, "read_parquet": 10, "parquet_prun": 10, "skip_metadata": 10, "register_csv": [10, 13], "register_dataset": 10, "dataset": 10, "register_object_stor": 10, "host": 10, "regist": [10, 13], "register_parquet": 10, "register_record_batch": 10, "register_t": 10, "register_udaf": 10, "udaf": 10, "register_udf": 10, "udf": 10, "session_id": 10, "sql": [10, 13], "whose": 10, "correspond": [10, 11], "table_exist": 10, "ab": 11, "aco": 11, "approx_distinct": 11, "approx_median": 11, "approx_percentile_cont": 11, "approx_percentile_cont_with_weight": 11, "arrai": [11, 13], "array_agg": 11, "arrow_typeof": 11, "ascii": 11, "numer": 11, "code": [11, 13], "first": [11, 13], "charact": 11, "argument": 11, "In": 11, "utf8": 11, "unicod": 11, "point": 11, "other": [11, 13], "multibyt": 11, "asin": 11, "atan": 11, "atan2": 11, "avg": 11, "bit_length": 11, "number": 11, "bit": 11, "8": [11, 13], "time": 11, "octet_length": 11, "btrim": 11, "remov": 11, "longest": 11, "contain": 11, "onli": [11, 13], "space": 11, "start": 11, "end": 11, "ceil": 11, "char_length": 11, "character_length": 11, "chr": 11, "coalesc": 11, "col": [11, 13], "refer": 11, "concat": 11, "concaten": 11, "text": 11, "null": 11, "ar": 11, "ignor": 11, "concat_w": 11, "sep": 11, "separ": 11, "corr": 11, "co": 11, "count_star": 11, "1": [11, 13], "covar": 11, "covar_pop": 11, "covar_samp": 11, "current_d": 11, "current_tim": 11, "date_bin": 11, "date_part": 11, "date_trunc": 11, "datepart": 11, "datetrunc": 11, "digest": 11, "comput": [11, 13], "binari": 11, "hash": [11, 13], "algorithm": 11, "standard": 11, "md5": 11, "sha224": 11, "sha256": 11, "sha384": 11, "sha512": 11, "blake2": 11, "blake2b": 11, "blake3": 11, "exp": 11, "floor": 11, "from_unixtim": 11, "group": 11, "in_list": 11, "negat": 11, "initcap": 11, "letter": 11, "word": 11, "upper": 11, "case": 11, "rest": 11, "lower": 11, "sequenc": 11, "alphanumer": 11, "non": 11, "left": 11, "n": 11, "when": [11, 13], "neg": 11, "last": 11, "length": 11, "ln": 11, "log": 11, "log10": 11, "log2": 11, "lpad": 11, "extend": 11, "prepend": 11, "fill": 11, "If": 11, "alreadi": 11, "longer": 11, "than": 11, "truncat": 11, "ltrim": 11, "make_arrai": 11, "max": 11, "written": [11, 13], "hexadecim": 11, "mean": 11, "median": 11, "min": 11, "now": 11, "nullif": 11, "byte": 11, "sinc": [11, 13], "version": 11, "accept": 11, "directli": 11, "strip": 11, "trail": 11, "order_bi": 11, "asc": 11, "pow": 11, "random": 11, "regexp_match": 11, "regexp_replac": 11, "replac": 11, "substr": 11, "match": 11, "posix": 11, "regular": 11, "repeat": 11, "occurr": 11, "revers": 11, "round": 11, "rpad": 11, "append": 11, "rtrim": 11, "signum": 11, "sin": 11, "split_part": 11, "split": 11, "th": 11, "field": 11, "sqrt": 11, "starts_with": 11, "true": 11, "prefix": 11, "stddev": 11, "stddev_pop": 11, "stddev_samp": 11, "strpo": 11, "index": 11, "within": 11, "zero": [11, 13], "present": 11, "posit": 11, "note": 11, "struct": 11, "r": [11, 13], "sum": [11, 13], "tan": 11, "to_hex": 11, "its": [11, 13], "equival": 11, "to_timestamp": 11, "to_timestamp_micro": 11, "to_timestamp_milli": 11, "to_timestamp_second": 11, "translat": 11, "extra": 11, "delet": 11, "trim": 11, "both": 11, "trunc": 11, "uuid": 11, "var": 11, "var_pop": 11, "var_samp": 11, "window": 11, "partition_bi": 11, "amazons3": 12, "googlecloud": 12, "localfilesystem": 12, "microsoftazur": 12, "librari": 13, "bind": 13, "apach": 13, "memori": 13, "like": 13, "pyspark": 13, "allow": 13, "you": 13, "through": 13, "against": 13, "obtain": 13, "back": 13, "also": 13, "complex": 13, "major": 13, "advantag": 13, "over": 13, "achiev": 13, "copi": 13, "between": 13, "cost": 13, "apart": 13, "lock": 13, "gil": 13, "Its": 13, "make": 13, "strong": 13, "assumpt": 13, "about": 13, "safeti": 13, "lack": 13, "leak": 13, "technic": 13, "via": 13, "c": 13, "interfac": 13, "simpl": 13, "usag": 13, "import": 13, "context": 13, "ctx": 13, "from_arrai": 13, "2": 13, "3": 13, "4": 13, "5": 13, "6": 13, "b": 13, "df": 13, "0": 13, "assert": 13, "7": 13, "9": 13, "we": 13, "echo": 13, "n1": 13, "n2": 13, "n3": 13, "exampl": 13, "And": 13, "def": 13, "is_null_arr": 13, "int64": 13, "bool_": 13, "stabl": 13, "fals": 13, "accumul": 13, "myaccumul": 13, "self": 13, "_sum": 13, "scalar": 13, "none": 13, "nice": 13, "t": 13, "yet": 13, "break": 13, "as_pi": 13, "merg": 13, "state": 13, "evalu": 13, "my_udaf": 13, "float64": 13, "verifi": 13, "__version__": 13, "assum": 13, "cargo": 13, "workflow": 13, "recommend": 13, "pyo3": 13, "maturin": 13, "bootstrap": 13, "fetch": 13, "repo": 13, "git": 13, "clone": 13, "github": 13, "com": 13, "prepar": 13, "wheel": 13, "python3": 13, "m": 13, "venv": 13, "activ": 13, "sourc": 13, "bin": 13, "itself": 13, "necessari": 13, "u": 13, "requir": 13, "310": 13, "txt": 13, "test": 13, "reli": 13, "submodul": 13, "init": 13, "whenev": 13, "chang": 13, "your": 13, "pull": 13, "sure": 13, "pytest": 13, "To": 13, "tool": 13, "done": 13, "onc": 13, "consid": 13, "piptool": 13, "compil": 13, "gener": 13, "o": 13, "more": 13, "detail": 13, "here": 13}, "objects": {"datafusion": [[6, 0, 1, "", "DataFrame"], [7, 0, 1, "", "Expr"], [8, 0, 1, "", "RuntimeConfig"], [9, 0, 1, "", "SessionConfig"], [10, 0, 1, "", "SessionContext"]], "datafusion.DataFrame": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "aggregate"], [6, 1, 1, "", "cache"], [6, 1, 1, "", "collect"], [6, 1, 1, "", "collect_partitioned"], [6, 1, 1, "", "count"], [6, 1, 1, "", "describe"], [6, 1, 1, "", "distinct"], [6, 1, 1, "", "except_all"], [6, 1, 1, "", "execution_plan"], [6, 1, 1, "", "explain"], [6, 1, 1, "", "filter"], [6, 1, 1, "", "intersect"], [6, 1, 1, "", "join"], [6, 1, 1, "", "limit"], [6, 1, 1, "", "logical_plan"], [6, 1, 1, "", "optimized_logical_plan"], [6, 1, 1, "", "repartition"], [6, 1, 1, "", "repartition_by_hash"], [6, 1, 1, "", "schema"], [6, 1, 1, "", "select"], [6, 1, 1, "", "select_columns"], [6, 1, 1, "", "show"], [6, 1, 1, "", "sort"], [6, 1, 1, "", "to_arrow_table"], [6, 1, 1, "", "to_pandas"], [6, 1, 1, "", "to_polars"], [6, 1, 1, "", "to_pydict"], [6, 1, 1, "", "to_pylist"], [6, 1, 1, "", "union"], [6, 1, 1, "", "union_distinct"], [6, 1, 1, "", "with_column"], [6, 1, 1, "", "with_column_renamed"], [6, 1, 1, "", "write_csv"], [6, 1, 1, "", "write_json"], [6, 1, 1, "", "write_parquet"]], "datafusion.Expr": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "alias"], [7, 1, 1, "", "canonical_name"], [7, 1, 1, "", "cast"], [7, 1, 1, "", "column"], [7, 1, 1, "", "column_name"], [7, 1, 1, "", "display_name"], [7, 1, 1, "", "is_null"], [7, 1, 1, "", "literal"], [7, 1, 1, "", "python_value"], [7, 1, 1, "", "rex_call_operands"], [7, 1, 1, "", "rex_call_operator"], [7, 1, 1, "", "rex_type"], [7, 1, 1, "", "sort"], [7, 1, 1, "", "to_variant"], [7, 1, 1, "", "types"], [7, 1, 1, "", "variant_name"]], "datafusion.RuntimeConfig": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "with_disk_manager_disabled"], [8, 1, 1, "", "with_disk_manager_os"], [8, 1, 1, "", "with_disk_manager_specified"], [8, 1, 1, "", "with_fair_spill_pool"], [8, 1, 1, "", "with_greedy_memory_pool"], [8, 1, 1, "", "with_temp_file_path"], [8, 1, 1, "", "with_unbounded_memory_pool"]], "datafusion.SessionConfig": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "set"], [9, 1, 1, "", "with_batch_size"], [9, 1, 1, "", "with_create_default_catalog_and_schema"], [9, 1, 1, "", "with_default_catalog_and_schema"], [9, 1, 1, "", "with_information_schema"], [9, 1, 1, "", "with_parquet_pruning"], [9, 1, 1, "", "with_repartition_aggregations"], [9, 1, 1, "", "with_repartition_file_min_size"], [9, 1, 1, "", "with_repartition_file_scans"], [9, 1, 1, "", "with_repartition_joins"], [9, 1, 1, "", "with_repartition_sorts"], [9, 1, 1, "", "with_repartition_windows"], [9, 1, 1, "", "with_target_partitions"]], "datafusion.SessionContext": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "catalog"], [10, 1, 1, "", "create_dataframe"], [10, 1, 1, "", "create_dataframe_from_logical_plan"], [10, 1, 1, "", "deregister_table"], [10, 1, 1, "", "empty_table"], [10, 1, 1, "", "execute"], [10, 1, 1, "", "from_arrow_table"], [10, 1, 1, "", "from_pandas"], [10, 1, 1, "", "from_polars"], [10, 1, 1, "", "from_pydict"], [10, 1, 1, "", "from_pylist"], [10, 1, 1, "", "read_avro"], [10, 1, 1, "", "read_csv"], [10, 1, 1, "", "read_json"], [10, 1, 1, "", "read_parquet"], [10, 1, 1, "", "register_csv"], [10, 1, 1, "", "register_dataset"], [10, 1, 1, "", "register_object_store"], [10, 1, 1, "", "register_parquet"], [10, 1, 1, "", "register_record_batches"], [10, 1, 1, "", "register_table"], [10, 1, 1, "", "register_udaf"], [10, 1, 1, "", "register_udf"], [10, 1, 1, "", "session_id"], [10, 1, 1, "", "sql"], [10, 1, 1, "", "table"], [10, 1, 1, "", "table_exist"], [10, 1, 1, "", "tables"]], "datafusion.functions": [[11, 2, 0, "-", "functions"]], "datafusion.functions.functions": [[11, 3, 1, "", "abs"], [11, 3, 1, "", "acos"], [11, 3, 1, "", "alias"], [11, 3, 1, "", "approx_distinct"], [11, 3, 1, "", "approx_median"], [11, 3, 1, "", "approx_percentile_cont"], [11, 3, 1, "", "approx_percentile_cont_with_weight"], [11, 3, 1, "", "array"], [11, 3, 1, "", "array_agg"], [11, 3, 1, "", "arrow_typeof"], [11, 3, 1, "", "ascii"], [11, 3, 1, "", "asin"], [11, 3, 1, "", "atan"], [11, 3, 1, "", "atan2"], [11, 3, 1, "", "avg"], [11, 3, 1, "", "bit_length"], [11, 3, 1, "", "btrim"], [11, 3, 1, "", "ceil"], [11, 3, 1, "", "char_length"], [11, 3, 1, "", "character_length"], [11, 3, 1, "", "chr"], [11, 3, 1, "", "coalesce"], [11, 3, 1, "", "col"], [11, 3, 1, "", "concat"], [11, 3, 1, "", "concat_ws"], [11, 3, 1, "", "corr"], [11, 3, 1, "", "cos"], [11, 3, 1, "", "count"], [11, 3, 1, "", "count_star"], [11, 3, 1, "", "covar"], [11, 3, 1, "", "covar_pop"], [11, 3, 1, "", "covar_samp"], [11, 3, 1, "", "current_date"], [11, 3, 1, "", "current_time"], [11, 3, 1, "", "date_bin"], [11, 3, 1, "", "date_part"], [11, 3, 1, "", "date_trunc"], [11, 3, 1, "", "datepart"], [11, 3, 1, "", "datetrunc"], [11, 3, 1, "", "digest"], [11, 3, 1, "", "exp"], [11, 3, 1, "", "floor"], [11, 3, 1, "", "from_unixtime"], [11, 3, 1, "", "grouping"], [11, 3, 1, "", "in_list"], [11, 3, 1, "", "initcap"], [11, 3, 1, "", "left"], [11, 3, 1, "", "length"], [11, 3, 1, "", "ln"], [11, 3, 1, "", "log"], [11, 3, 1, "", "log10"], [11, 3, 1, "", "log2"], [11, 3, 1, "", "lower"], [11, 3, 1, "", "lpad"], [11, 3, 1, "", "ltrim"], [11, 3, 1, "", "make_array"], [11, 3, 1, "", "max"], [11, 3, 1, "", "md5"], [11, 3, 1, "", "mean"], [11, 3, 1, "", "median"], [11, 3, 1, "", "min"], [11, 3, 1, "", "now"], [11, 3, 1, "", "nullif"], [11, 3, 1, "", "octet_length"], [11, 3, 1, "", "order_by"], [11, 3, 1, "", "pow"], [11, 3, 1, "", "power"], [11, 3, 1, "", "random"], [11, 3, 1, "", "regexp_match"], [11, 3, 1, "", "regexp_replace"], [11, 3, 1, "", "repeat"], [11, 3, 1, "", "replace"], [11, 3, 1, "", "reverse"], [11, 3, 1, "", "right"], [11, 3, 1, "", "round"], [11, 3, 1, "", "rpad"], [11, 3, 1, "", "rtrim"], [11, 3, 1, "", "sha224"], [11, 3, 1, "", "sha256"], [11, 3, 1, "", "sha384"], [11, 3, 1, "", "sha512"], [11, 3, 1, "", "signum"], [11, 3, 1, "", "sin"], [11, 3, 1, "", "split_part"], [11, 3, 1, "", "sqrt"], [11, 3, 1, "", "starts_with"], [11, 3, 1, "", "stddev"], [11, 3, 1, "", "stddev_pop"], [11, 3, 1, "", "stddev_samp"], [11, 3, 1, "", "strpos"], [11, 3, 1, "", "struct"], [11, 3, 1, "", "substr"], [11, 3, 1, "", "sum"], [11, 3, 1, "", "tan"], [11, 3, 1, "", "to_hex"], [11, 3, 1, "", "to_timestamp"], [11, 3, 1, "", "to_timestamp_micros"], [11, 3, 1, "", "to_timestamp_millis"], [11, 3, 1, "", "to_timestamp_seconds"], [11, 3, 1, "", "translate"], [11, 3, 1, "", "trim"], [11, 3, 1, "", "trunc"], [11, 3, 1, "", "upper"], [11, 3, 1, "", "uuid"], [11, 3, 1, "", "var"], [11, 3, 1, "", "var_pop"], [11, 3, 1, "", "var_samp"], [11, 3, 1, "", "window"]], "datafusion.object_store": [[12, 2, 0, "-", "object_store"]], "datafusion.object_store.object_store": [[12, 0, 1, "", "AmazonS3"], [12, 0, 1, "", "GoogleCloud"], [12, 0, 1, "", "LocalFileSystem"], [12, 0, 1, "", "MicrosoftAzure"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "function", "Python function"]}, "titleterms": {"api": [0, 13], "refer": [0, 13], "datafram": [1, 6], "sessioncontext": [2, 10], "expr": [3, 7], "function": [4, 11], "objectstor": 5, "datafus": [6, 7, 8, 9, 10, 11, 12, 13], "runtimeconfig": 8, "sessionconfig": 9, "object_stor": 12, "python": 13, "how": 13, "us": 13, "udf": 13, "udaf": 13, "instal": 13, "from": 13, "pip": 13, "develop": 13, "updat": 13, "depend": 13}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "DataFrame": [[1, "dataframe"]], "SessionContext": [[2, "sessioncontext"]], "Expr": [[3, "expr"]], "Functions": [[4, "functions"]], "ObjectStore": [[5, "objectstore"]], "datafusion.DataFrame": [[6, "datafusion-dataframe"]], "datafusion.Expr": [[7, "datafusion-expr"]], "datafusion.RuntimeConfig": [[8, "datafusion-runtimeconfig"]], "datafusion.SessionConfig": [[9, "datafusion-sessionconfig"]], "datafusion.SessionContext": [[10, "datafusion-sessioncontext"]], "datafusion.functions.functions": [[11, "module-datafusion.functions.functions"]], "datafusion.object_store.object_store": [[12, "module-datafusion.object_store.object_store"]], "DataFusion in Python": [[13, "datafusion-in-python"]], "How to use it": [[13, "how-to-use-it"]], "UDFs": [[13, "udfs"]], "UDAF": [[13, "udaf"]], "How to install (from pip)": [[13, "how-to-install-from-pip"]], "How to develop": [[13, "how-to-develop"]], "How to update dependencies": [[13, "how-to-update-dependencies"]], "API reference": [[13, "api-reference"]]}, "indexentries": {"dataframe (class in datafusion)": [[6, "datafusion.DataFrame"]], "__init__() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.__init__"]], "aggregate() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.aggregate"]], "cache() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.cache"]], "collect() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.collect"]], "collect_partitioned() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.collect_partitioned"]], "count() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.count"]], "describe() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.describe"]], "distinct() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.distinct"]], "except_all() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.except_all"]], "execution_plan() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.execution_plan"]], "explain() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.explain"]], "filter() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.filter"]], "intersect() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.intersect"]], "join() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.join"]], "limit() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.limit"]], "logical_plan() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.logical_plan"]], "optimized_logical_plan() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.optimized_logical_plan"]], "repartition() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.repartition"]], "repartition_by_hash() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.repartition_by_hash"]], "schema() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.schema"]], "select() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.select"]], "select_columns() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.select_columns"]], "show() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.show"]], "sort() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.sort"]], "to_arrow_table() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.to_arrow_table"]], "to_pandas() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.to_pandas"]], "to_polars() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.to_polars"]], "to_pydict() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.to_pydict"]], "to_pylist() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.to_pylist"]], "union() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.union"]], "union_distinct() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.union_distinct"]], "with_column() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.with_column"]], "with_column_renamed() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.with_column_renamed"]], "write_csv() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.write_csv"]], "write_json() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.write_json"]], "write_parquet() (datafusion.dataframe method)": [[6, "datafusion.DataFrame.write_parquet"]], "expr (class in datafusion)": [[7, "datafusion.Expr"]], "__init__() (datafusion.expr method)": [[7, "datafusion.Expr.__init__"]], "alias() (datafusion.expr method)": [[7, "datafusion.Expr.alias"]], "canonical_name() (datafusion.expr method)": [[7, "datafusion.Expr.canonical_name"]], "cast() (datafusion.expr method)": [[7, "datafusion.Expr.cast"]], "column() (datafusion.expr static method)": [[7, "datafusion.Expr.column"]], "column_name() (datafusion.expr method)": [[7, "datafusion.Expr.column_name"]], "display_name() (datafusion.expr method)": [[7, "datafusion.Expr.display_name"]], "is_null() (datafusion.expr method)": [[7, "datafusion.Expr.is_null"]], "literal() (datafusion.expr static method)": [[7, "datafusion.Expr.literal"]], "python_value() (datafusion.expr method)": [[7, "datafusion.Expr.python_value"]], "rex_call_operands() (datafusion.expr method)": [[7, "datafusion.Expr.rex_call_operands"]], "rex_call_operator() (datafusion.expr method)": [[7, "datafusion.Expr.rex_call_operator"]], "rex_type() (datafusion.expr method)": [[7, "datafusion.Expr.rex_type"]], "sort() (datafusion.expr method)": [[7, "datafusion.Expr.sort"]], "to_variant() (datafusion.expr method)": [[7, "datafusion.Expr.to_variant"]], "types() (datafusion.expr method)": [[7, "datafusion.Expr.types"]], "variant_name() (datafusion.expr method)": [[7, "datafusion.Expr.variant_name"]], "runtimeconfig (class in datafusion)": [[8, "datafusion.RuntimeConfig"]], "__init__() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.__init__"]], "with_disk_manager_disabled() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_disk_manager_disabled"]], "with_disk_manager_os() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_disk_manager_os"]], "with_disk_manager_specified() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_disk_manager_specified"]], "with_fair_spill_pool() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_fair_spill_pool"]], "with_greedy_memory_pool() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_greedy_memory_pool"]], "with_temp_file_path() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_temp_file_path"]], "with_unbounded_memory_pool() (datafusion.runtimeconfig method)": [[8, "datafusion.RuntimeConfig.with_unbounded_memory_pool"]], "sessionconfig (class in datafusion)": [[9, "datafusion.SessionConfig"]], "__init__() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.__init__"]], "set() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.set"]], "with_batch_size() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_batch_size"]], "with_create_default_catalog_and_schema() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_create_default_catalog_and_schema"]], "with_default_catalog_and_schema() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_default_catalog_and_schema"]], "with_information_schema() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_information_schema"]], "with_parquet_pruning() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_parquet_pruning"]], "with_repartition_aggregations() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_repartition_aggregations"]], "with_repartition_file_min_size() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_repartition_file_min_size"]], "with_repartition_file_scans() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_repartition_file_scans"]], "with_repartition_joins() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_repartition_joins"]], "with_repartition_sorts() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_repartition_sorts"]], "with_repartition_windows() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_repartition_windows"]], "with_target_partitions() (datafusion.sessionconfig method)": [[9, "datafusion.SessionConfig.with_target_partitions"]], "sessioncontext (class in datafusion)": [[10, "datafusion.SessionContext"]], "__init__() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.__init__"]], "catalog() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.catalog"]], "create_dataframe() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.create_dataframe"]], "create_dataframe_from_logical_plan() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.create_dataframe_from_logical_plan"]], "deregister_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.deregister_table"]], "empty_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.empty_table"]], "execute() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.execute"]], "from_arrow_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.from_arrow_table"]], "from_pandas() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.from_pandas"]], "from_polars() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.from_polars"]], "from_pydict() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.from_pydict"]], "from_pylist() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.from_pylist"]], "read_avro() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_avro"]], "read_csv() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_csv"]], "read_json() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_json"]], "read_parquet() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.read_parquet"]], "register_csv() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_csv"]], "register_dataset() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_dataset"]], "register_object_store() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_object_store"]], "register_parquet() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_parquet"]], "register_record_batches() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_record_batches"]], "register_table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_table"]], "register_udaf() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_udaf"]], "register_udf() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.register_udf"]], "session_id() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.session_id"]], "sql() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.sql"]], "table() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.table"]], "table_exist() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.table_exist"]], "tables() (datafusion.sessioncontext method)": [[10, "datafusion.SessionContext.tables"]], "abs() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.abs"]], "acos() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.acos"]], "alias() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.alias"]], "approx_distinct() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.approx_distinct"]], "approx_median() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.approx_median"]], "approx_percentile_cont() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.approx_percentile_cont"]], "approx_percentile_cont_with_weight() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.approx_percentile_cont_with_weight"]], "array() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.array"]], "array_agg() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.array_agg"]], "arrow_typeof() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.arrow_typeof"]], "ascii() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ascii"]], "asin() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.asin"]], "atan() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.atan"]], "atan2() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.atan2"]], "avg() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.avg"]], "bit_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.bit_length"]], "btrim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.btrim"]], "ceil() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ceil"]], "char_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.char_length"]], "character_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.character_length"]], "chr() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.chr"]], "coalesce() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.coalesce"]], "col() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.col"]], "concat() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.concat"]], "concat_ws() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.concat_ws"]], "corr() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.corr"]], "cos() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.cos"]], "count() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.count"]], "count_star() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.count_star"]], "covar() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.covar"]], "covar_pop() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.covar_pop"]], "covar_samp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.covar_samp"]], "current_date() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.current_date"]], "current_time() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.current_time"]], "datafusion.functions.functions": [[11, "module-datafusion.functions.functions"]], "date_bin() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.date_bin"]], "date_part() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.date_part"]], "date_trunc() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.date_trunc"]], "datepart() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.datepart"]], "datetrunc() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.datetrunc"]], "digest() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.digest"]], "exp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.exp"]], "floor() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.floor"]], "from_unixtime() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.from_unixtime"]], "grouping() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.grouping"]], "in_list() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.in_list"]], "initcap() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.initcap"]], "left() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.left"]], "length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.length"]], "ln() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ln"]], "log() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.log"]], "log10() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.log10"]], "log2() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.log2"]], "lower() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.lower"]], "lpad() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.lpad"]], "ltrim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.ltrim"]], "make_array() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.make_array"]], "max() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.max"]], "md5() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.md5"]], "mean() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.mean"]], "median() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.median"]], "min() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.min"]], "module": [[11, "module-datafusion.functions.functions"], [12, "module-datafusion.object_store.object_store"]], "now() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.now"]], "nullif() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.nullif"]], "octet_length() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.octet_length"]], "order_by() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.order_by"]], "pow() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.pow"]], "power() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.power"]], "random() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.random"]], "regexp_match() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.regexp_match"]], "regexp_replace() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.regexp_replace"]], "repeat() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.repeat"]], "replace() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.replace"]], "reverse() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.reverse"]], "right() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.right"]], "round() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.round"]], "rpad() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.rpad"]], "rtrim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.rtrim"]], "sha224() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha224"]], "sha256() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha256"]], "sha384() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha384"]], "sha512() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sha512"]], "signum() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.signum"]], "sin() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sin"]], "split_part() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.split_part"]], "sqrt() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sqrt"]], "starts_with() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.starts_with"]], "stddev() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.stddev"]], "stddev_pop() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.stddev_pop"]], "stddev_samp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.stddev_samp"]], "strpos() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.strpos"]], "struct() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.struct"]], "substr() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.substr"]], "sum() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.sum"]], "tan() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.tan"]], "to_hex() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_hex"]], "to_timestamp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_timestamp"]], "to_timestamp_micros() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_timestamp_micros"]], "to_timestamp_millis() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_timestamp_millis"]], "to_timestamp_seconds() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.to_timestamp_seconds"]], "translate() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.translate"]], "trim() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.trim"]], "trunc() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.trunc"]], "upper() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.upper"]], "uuid() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.uuid"]], "var() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.var"]], "var_pop() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.var_pop"]], "var_samp() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.var_samp"]], "window() (in module datafusion.functions.functions)": [[11, "datafusion.functions.functions.window"]], "amazons3 (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.AmazonS3"]], "googlecloud (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.GoogleCloud"]], "localfilesystem (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.LocalFileSystem"]], "microsoftazure (class in datafusion.object_store.object_store)": [[12, "datafusion.object_store.object_store.MicrosoftAzure"]], "datafusion.object_store.object_store": [[12, "module-datafusion.object_store.object_store"]]}})