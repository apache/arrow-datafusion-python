# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Python test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  generate-data:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/scalytics/tpch-docker:main
      volumes:
        - ${{ vars.GITHUB_WORKSPACE }}/benchmarks/tpch/data:/data
    steps:
      - name: Run dbgen to create 1 Gb dataset
        run: |
          mkdir -p /data/answers
          cd /opt/tpch/2.18.0_rc2/dbgen
          dbgen -s 1
          mv /data/customer.tbl /data/customer.csv
          mv /data/lineitem.tbl /data/lineitem.csv
          mv /data/nation.tbl /data/nation.csv
          mv /data/orders.tbl /data/orders.csv
          mv /data/part.tbl /data/part.csv
          mv /data/partsupp.tbl /data/partsupp.csv
          mv /data/region.tbl /data/region.csv
          mv /data/supplier.tbl /data/supplier.csv
          cp /opt/tpch/2.18.0_rc2/dbgen/answers/* /data/answers/
      - name: Upload TPC-H dataset artifact
        uses: actions/upload-artifact@v4
        with:
          name: tpch-dataset
          path: benchmarks/tpch/data

  test-matrix:
    runs-on: ubuntu-latest
    needs: generate-data
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
        toolchain:
          - "stable"
        # build stable for only 3.7
        include:
          - python-version: "3.7"
            toolchain: "stable"
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.20.2'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: ~/.cargo
          key: cargo-cache-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}

      - name: Check Formatting
        uses: actions-rs/cargo@v1
        if: ${{ matrix.python-version == '3.10' && matrix.toolchain == 'stable' }}
        with:
          command: fmt
          args: -- --check

      - name: Run Clippy
        uses: actions-rs/cargo@v1
        if: ${{ matrix.python-version == '3.10' && matrix.toolchain == 'stable' }}
        with:
          command: clippy
          args: --all-targets --all-features -- -D clippy::all -A clippy::redundant_closure

      - name: Create Virtualenv (3.7)
        if: ${{ matrix.python-version == '3.7' }}
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements-37.txt

      - name: Create Virtualenv (3.10)
        if: ${{ matrix.python-version == '3.10' }}
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements-310.txt

      - name: Create Virtualenv (3.11)
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements-311.txt

      - name: Run tests
        env:
          RUST_BACKTRACE: 1
        run: |
          git submodule update --init
          source venv/bin/activate
          pip install -e . -vv
          pytest -v .

      - name: Download TPC-H dataset artifact
        uses: actions/download-artifact@v4
        with:
          name: tpch-dataset

      - name: Run TPC-H examples
        run: |
          source venv/bin/activate
          cd examples/tpch
          python convert_data_to_parquet.py
          pytest _tests.py
