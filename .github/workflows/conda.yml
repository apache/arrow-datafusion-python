name: Build conda nightly
on: [push, pull_request]

# Cancel any already running instances of this build
concurrency:
  group: conda-${{ github.head_ref }}
  cancel-in-progress: true

# Required shell entrypoint to have properly activated conda environments
defaults:
  run:
    shell: bash -l {0}

jobs:
  conda:
    name: Build (and optionally upload) the conda nightly
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          miniforge-variant: Mambaforge
          use-mamba: true
          python-version: "3.8"
          channel-priority: strict
      - name: Install dependencies
        run: |
          mamba install boa conda-verify

          which python
          pip list
          mamba list
      - uses: actions-rs/toolchain@v1
        with:
          profile: complete
          toolchain: stable
          override: true
          components: clippy, rustfmt
      - name: Build conda package
        env:
            RUSTFMT: /home/runner/.cargo/bin/rustfmt
        run: |
          # suffix for nightly package versions
          export VERSION_SUFFIX=a`date +%y%m%d`

          echo "rustfmt: $(which rustfmt)"
          /home/runner/.cargo/bin/rustfmt

          conda mambabuild conda/recipes \
                           --no-anaconda-upload \
                           --output-folder .
      # - name: Upload conda package
      #   if: |
      #     github.event_name == 'push'
      #     && github.repository == 'apache/arrow-datafusion-python'
      #   env:
      #     ANACONDA_API_TOKEN: ${{ secrets.DASK_CONDA_TOKEN }}
      #     LABEL: ${{ github.ref == 'refs/heads/datafusion-sql-planner' && 'dev_datafusion' || 'dev' }}
      #   run: |
      #     # install anaconda for upload
      #     mamba install anaconda-client

      #     anaconda upload --label $LABEL linux-64/*.tar.bz2
